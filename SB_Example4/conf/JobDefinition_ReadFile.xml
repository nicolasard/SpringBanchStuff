<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans        
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd">
    
    
<!-- Este job definition esta basado en el de http://kveeresham.blogspot.com.ar/2014/01/spring-batch-chunk-orienter-processing.html -->

<batch:job id="ReadFile" restartable="false">

    <batch:step id="step1">
		<!--
		<tasklet transaction-manager="transactionManager">
			<chunk reader="sucessTestReader" writer="testWriter" commit-interval="5" />
		</tasklet>
		-->
	   <batch:tasklet>
		<batch:chunk reader="jdbcReader" processor="testProcessor" writer="cvsFileItemWriter" commit-interval="5" />
	   </batch:tasklet>
    </batch:step>

</batch:job>
    
<bean id="jdbcReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
  <property name="dataSource" ref="jdbc:sqlserver://SERVER:1433;databaseName=BASE;user=User;password=Pass;"/>
  <property name="sql" value="select * from Students"/>
  <property name="rowMapper" ref="com.springbatch.ejemplo1.StudentRowMapper"/>
</bean>

<bean id="testProcessor" class="com.springbatch.ejemplo1.TestProcessor" />
 
<bean id="cvsFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
	<!-- write to this csv file -->
	<property name="resource" value="file:cvs/report.csv" />
	<property name="shouldDeleteIfExists" value="true" />

	<property name="lineAggregator">
	  <bean
		class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
		<property name="delimiter" value="," />
		<property name="fieldExtractor">
		  <bean
			class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
			<property name="names" value="Output" />
		   </bean>
		</property>
	   </bean>
	</property>
</bean>
 
</beans>
